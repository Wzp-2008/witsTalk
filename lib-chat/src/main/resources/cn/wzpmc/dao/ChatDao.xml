<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wzpmc.dao.ChatDao">
    <insert id="sendMessage" parameterType="cn.wzpmc.pojo.Message" useGeneratedKeys="true" keyProperty="id">
        insert into message
        set content=#{content},
            sender=#{sender},
            type=#{type},
            sendtime=#{sendtime};
    </insert>
    <update id="recall" parameterType="cn.wzpmc.pojo.Message">
        update message
        set recall=1
        where id = #{id};
    </update>
    <update id="initTable">
        CREATE TABLE IF NOT EXISTS `message`
        (
            `id`       int(11)                                                        NOT NULL AUTO_INCREMENT COMMENT '消息表id',
            `content`  longtext CHARACTER SET utf8 COLLATE utf8_general_ci            NOT NULL COMMENT '消息表消息内容',
            `sender`   varchar(25) CHARACTER SET utf8 COLLATE utf8_general_ci         NOT NULL COMMENT '消息表发送者',
            `recall`   tinyint(1) UNSIGNED ZEROFILL                                   NOT NULL DEFAULT 0 COMMENT '消息表是否撤回',
            `sendtime` datetime                                                       NOT NULL COMMENT '消息表消息发送时间',
            `type`     enum ('text','img') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'text' COMMENT '消息表消息类型',
            PRIMARY KEY (`id`) USING BTREE,
            INDEX `sender` (`sender`) USING BTREE,
            CONSTRAINT `message_ibfk_1` FOREIGN KEY (`sender`) REFERENCES `witstalk`.`user` (`username`) ON DELETE RESTRICT ON UPDATE RESTRICT
        ) ENGINE = InnoDB
          AUTO_INCREMENT = 2
          CHARACTER SET = utf8
          COLLATE = utf8_general_ci
          ROW_FORMAT = Compact;
    </update>
    <select id="getMessage" resultType="cn.wzpmc.pojo.Message">
        select m.*, u.base64
        from message m
                 inner join user u on u.username = m.sender
        where m.id >= #{id_min}
          and m.recall = 0
        order by m.id desc
        limit #{count};
    </select>
    <select id="getUserHeadPortrait" resultType="java.lang.String">
        select `base64`
        from user
        where BINARY `username` = #{username};
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        select COUNT(*)
        from message;
    </select>
    <select id="getNewMessage" resultType="cn.wzpmc.pojo.Message">
        select m.*,u.base64 from message m inner join user u on u.username = m.sender where m.id >= #{id_min} and m.id &lt;= #{id_max} and m.recall = 0 order by m.id desc limit #{count};
    </select>
</mapper>